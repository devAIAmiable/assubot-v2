#!/bin/bash
set -e

# --- Color setup ---
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# --- Safety checks ---
if ! command -v pnpm &> /dev/null; then
  echo -e "${RED}‚ùå pnpm not found. Please install it before committing.${NC}"
  exit 1
fi

# --- Get list of staged files ---
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM --relative)

if [ -z "$STAGED_FILES" ]; then
  echo "No staged files found"
  exit 0
fi

# --- Prettier formatting ---
echo "üßπ Checking formatting with Prettier..."
FORMATTABLE_FILES=$(echo "$STAGED_FILES" | grep -E '\.(js|jsx|ts|tsx|json|md|css|scss|html)$' || true)

if [ -n "$FORMATTABLE_FILES" ]; then
  UNFORMATTED=$(pnpm prettier --list-different $FORMATTABLE_FILES 2>/dev/null || true)
  if [ -n "$UNFORMATTED" ]; then
    echo "Formatting files: $UNFORMATTED"
    echo "$UNFORMATTED" | xargs pnpm prettier --write
    echo -e "${RED}‚ùå Commit failed: Files were reformatted. Please review and stage again.${NC}"
    exit 1
  else
    echo -e "${GREEN}‚úÖ All files are properly formatted${NC}"
  fi
fi

# --- ESLint linting ---
echo "üîç Linting staged TypeScript/JavaScript files..."
LINTABLE_FILES=$(echo "$STAGED_FILES" | grep -E '\.(js|jsx|ts|tsx)$' || true)

if [ -n "$LINTABLE_FILES" ]; then
  if ! pnpm eslint --fix $LINTABLE_FILES; then
    echo -e "${RED}‚ùå Commit failed: Linting errors found. Please fix and recommit.${NC}"
    exit 1
  else
    echo -e "${GREEN}‚úÖ All files passed linting${NC}"
  fi
fi

# --- Tests (optional) ---
# echo "üß™ Running related tests..."
# if echo "$STAGED_FILES" | grep -E '\.(test|spec)\.(ts|tsx|js|jsx)$' > /dev/null; then
#   if ! pnpm test --findRelatedTests $STAGED_FILES; then
#     echo -e "${RED}‚ùå Commit failed: Tests failed.${NC}"
#     exit 1
#   fi
# fi

echo -e "${GREEN}‚úÖ Pre-commit checks passed successfully${NC}"
